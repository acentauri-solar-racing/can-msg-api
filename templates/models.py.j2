from sqlalchemy import Integer, Float
from sqlalchemy.orm import declarative_base, Mapped, mapped_column

Base = declarative_base()

{% for topic in topics %}
class {{conv_name_camel_case(topic.name)}}(Base):
    __tablename__ = "{{topic.name}}"

    {%- for field in topic.data %}
    {{field}}: Mapped = mapped_column({{type_lookup[topic["data"][field]["type"]]["pysql_t"]}}())
    {%- endfor %}

    def __init__(self, decoded_tuple):
    {%- for field in topic.data %}
        self.{{field}} = decoded_tuple[{{loop.index - 1}}]
    {%- endfor %}

    def __repr__(self) -> str:
        return "%s(id=%s), ({%for f in topic.data -%}%s{{", " if not loop.last else ""}}{% endfor %})" % (
            "{{conv_name_camel_case(topic.name)}}",
            self.id,
            {%-for f in topic.data %}
            self.{{f}},
            {%- endfor %}
        )

{% endfor %}
